{"version":3,"sources":["utils/logger.js"],"names":["winston","require","logLevel","logger","Logger","level","add","transports","Console","prettyPrint","colorize","silent","timestamp","data","state","debug"],"mappings":";;;;;;;;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;;;AAIE,wBAA0B;AAAA,QAAZC,QAAY,QAAZA,QAAY;;AAAA;;AACxB,SAAKC,MAAL,GAAc,IAAIH,QAAQI,MAAZ,CAAmB;AAC/BC,aAAOH,YAAY;AADY,KAAnB,CAAd;;AAIA,SAAKC,MAAL,CAAYG,GAAZ,CAAgBN,QAAQO,UAAR,CAAmBC,OAAnC,EAA4C;AAC1CC,mBAAa,IAD6B;AAE1CC,gBAAU,IAFgC;AAG1CC,cAAQ,KAHkC;AAI1CC,iBAAW;AAJ+B,KAA5C;AAOD;;;;2CAKsBC,I,EAAM;AAC3BA,WAAKC,KAAL,GAAa,SAAb;AACA,WAAKX,MAAL,CAAYY,KAAZ,CAAkBF,IAAlB;AACD;;;0CAEqBA,I,EAAM;AAC1BA,WAAKC,KAAL,GAAa,QAAb;AACA,WAAKX,MAAL,CAAYY,KAAZ,CAAkBF,IAAlB;AACD;;;8CAEyBA,I,EAAM;AAC9BA,WAAKC,KAAL,GAAa,SAAb;AACA,WAAKX,MAAL,CAAYY,KAAZ,CAAkBF,IAAlB;AACD","file":"utils/logger.js","sourcesContent":["const winston = require('winston');\n\nexport default class {\n\n  constructor({ logLevel }) {\n    this.logger = new winston.Logger({\n      level: logLevel || 'error'\n    });\n\n    this.logger.add(winston.transports.Console, {\n      prettyPrint: true,\n      colorize: true,\n      silent: false,\n      timestamp: false\n    });\n\n  }\n\n  /*\n    logger methods to abstract out networking.\n  */\n  logPendingNetworkEvent(data) {\n    data.state = 'pending';\n    this.logger.debug(data);\n  }\n\n  logFailedNetworkEvent(data) {\n    data.state = 'failed';\n    this.logger.debug(data);\n  }\n\n  logSuccessfulNetworkEvent(data) {\n    data.state = 'success';\n    this.logger.debug(data);\n  }\n\n}\n"],"sourceRoot":"/source/"}