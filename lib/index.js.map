{"version":3,"sources":["index.js"],"names":["os","require","inquirer","cli","enable","async","fs","PUBNUB","slug","shelljs","envs","networking","parse","block","key","file","env","email","insert","password","workingDir","String","pwd","main","args","options","tasks","blockFile","sessionFile","homedir","info","userQuestions","name","message","type","validate","input","result","indexOf","self","session","blockLocal","blockRemote","eventHandler","blockFileRequired","api","debug","endpoint","host","fatal","ok","mergeEventHandler","data","_id","id","event","channels","output","updateEventHandler","revise","cb","o","default","choices","qs","Object","keys","forEach","hasOwnProperty","push","length","eventHandlerName","error","prompt","then","mergeBlock","_key_id","key_id","description","updateBlock","restore","blockCreate","subscribe_key","publish_key","createBlock","keyId","blockPayload","err","payload","explain","opts","b","k","f","hint","command","sessionFileGet","readJson","sessionDelete","unlink","sessionGet","login","args2","spinner","init","body","outputJson","spaces","err2","answers","expires","Date","getTime","user","requireInit","blockRead","blockFileCreate","keyGet","givenKey","getApps","ownerId","paramKey","app","value","Separator","value2","properties","blockGet","givenBlock","createcb","getBlocks","paramBlock","blockWrite","blockPush","blockPushArgs","blockId","blockStart","startBlock","pubnub","origin","chan","realtime_analytics_channel","subscribe","channel","m","state","JSON","stringify","blockStop","stopBlock","eventHandlerGet","paramEventHandler","event_handlers","eventHandlerWrite","eachSeries","eh","holla","fullPath","noIds","found","appendEH","outputFile","code","i","index","blockComplete","eventHandlerComplete","mapSeries","results","eventHandlerPush","update","done","eventHandlerId","eventHandlerPayload","block_id","each","testJson","readFile","existsSync","testVars","readFileSync","replace","routes","functions","success","logout","pull","start","stop","series","process","exit"],"mappings":"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","file":"index.js","sourcesContent":["var os = require('os'); // os level functions\n\nvar inquirer = require('inquirer'); // interactive mode selection\nvar cli = require('cli').enable('status'); // Enable cli.ok, cli.error, etc\nvar async = require('async'); // async control flow\nvar fs = require('fs-extra'); // json support for fs\nvar PUBNUB = require('pubnub'); // obviously\nvar slug = require('slug'); // strips characters for friendly file names\nvar shelljs = require('shelljs'); // ability to run shell commands\n\nvar envs = require('./../envs'); // location of block environment configs\nvar networking = require('./networking');\n\n// cli arguments and commands\ncli.parse({\n  block: ['b', 'Block ID', 'int'],\n  key: ['k', 'Subscribe Key ID', 'int'],\n  file: ['f', 'A block file', 'path'],\n  env: ['e', 'An environment [bronze, silver, gold, prod]', 'string'],\n  email: ['m', 'Email', 'string'],\n  insert: ['n', 'Insert Mode. Create new blocks and skip prompts.', true, false],\n  password: ['p', 'Password', 'string']\n}, ['login', 'logout', 'start', 'stop', 'init', 'push', 'pull']);\n\n// sets all file operations relative to the current directory\nvar workingDir = String(shelljs.pwd() + '/');\n\n// cli function to parse arguments and options\ncli.main(function (args, options) {\n  options.file = options.file || '/';\n\n  // an array of functions to run through in series\n  // search for the string 'routes' in your IDE for more info\n  var tasks = [];\n\n  // default file location is pwd\n  var blockFile = workingDir + options.file + 'block.json';\n\n  // token and user info stored in home directory as this file\n  var sessionFile = os.homedir() + '/.pubnub-cli';\n\n  if (options.insert) {\n    cli.info('Warning! Insert option provided.');\n    cli.info('Creating new blocks and skipping prompts.');\n  }\n\n  // user login questions for inquirer\n  var userQuestions = {\n    email: {\n      name: 'email',\n      message: 'PubNub Email:',\n      type: 'input',\n      validate: function (input) {\n        var result = true;\n\n        if (input.indexOf('@') === -1) { // I apologize\n          result = 'Please enter a valid email address.';\n        }\n\n        return result;\n      }\n    },\n    password: {\n      name: 'password',\n      message: 'PubNub Password:',\n      type: 'password'\n    }\n  };\n\n  var self = this;\n\n  // methods in this object are pushed into the ```tasks``` array\n  // then those methods are executed in series\n  // as the methods execute, they populate properties of this object\n  // these properties may be accessed by functions executed later\n\n  self.session = false; // the user session\n  self.blockLocal = false; // the local block file\n  self.blockRemote = false; // the remove block json object\n  self.key = false; // the selected key object\n  self.eventHandler = false; // the selected event handler object\n\n  self.blockFileRequired = false;\n\n  // specify the required environment\n  options.env = options.env || 'prod';\n\n  self.env = envs[options.env]; // map the env string to an object\n\n  // pubnub-api is a custom api client for portal related operations\n  var api = networking({\n    debug: true,\n    endpoint: self.env.host\n  });\n\n  if (!self.env) {\n    cli.fatal('Invalid environment');\n  } else {\n    cli.ok('Working with ' + options.env + ' environment at ' + self.env.host);\n  }\n\n  // this merges a remote event handler with a local event handler\n  var mergeEventHandler = function (input, data) {\n    cli.debug('Merging remote event handle with local event handler.');\n\n    input._id = data.id || input._id;\n    input.name = data.name || input.name;\n    input.event = data.event || input.event;\n    input.channels = data.channels || input.channels;\n    input.file = input.file || data.file; // local attribute wins\n    input.output = data.output || input.output;\n\n    return input;\n  };\n\n  // interactive mode of creating/updating/merging an event handler\n  var updateEventHandler = function (eventHandler, revise, cb) {\n    // questions for inquirer\n    var o = {\n      name: {\n        name: 'name',\n        message: 'Name:',\n        type: 'input',\n        default: eventHandler.name\n      },\n      event: {\n        name: 'event',\n        message: 'Event:',\n        type: 'list',\n        default: eventHandler.event,\n        choices: ['js-after-publish', 'js-before-publish',\n          'js-after-presence'\n        ]\n      },\n      channels: {\n        name: 'channels',\n        message: 'PubNub Channels:',\n        type: 'input',\n        default: eventHandler.channels\n      },\n      output: {\n        name: 'output',\n        message: 'Output:',\n        type: 'input',\n        default: eventHandler.output\n      }\n    };\n\n    // if we're missing this property\n    // add interactive question to an array\n    var qs = [];\n    Object.keys(o).forEach(function (key) {\n      if (revise || !eventHandler.hasOwnProperty(key)) {\n        qs.push(o[key]);\n      }\n    });\n\n    if (qs.length) {\n      // if there are questions, prompt the user\n      if (!revise) {\n        var eventHandlerName = eventHandler.name || eventHandler.event || 'Unknown';\n        cli.error('Event handler ' + eventHandlerName + ' is missing some information.');\n      }\n\n      inquirer.prompt(qs).then(cb);\n    } else {\n      // otherwise, return\n      cb(eventHandler);\n    }\n  };\n\n  // merges a remote block with what exists on the local filesystem\n  var mergeBlock = function (input, data) {\n    cli.debug('Merging remote block with local block.');\n\n    input._id = data.id || input._id;\n    input._key_id = data.key_id || input._key_id;\n    input.name = data.name || input.name;\n    input.description = data.description || input.description;\n\n    return input;\n  };\n\n  // updates a block object with information from interactive mode\n  var updateBlock = function (block, revise, cb) {\n    // questions for inquirer\n    var o = {\n      name: {\n        name: 'name',\n        message: 'Name:',\n        type: 'input',\n        default: block.name\n      },\n      description: {\n        name: 'description',\n        message: 'Description:',\n        type: 'input',\n        default: block.description\n      }\n    };\n\n    // if the block does not have the property\n    // add the prompt to a list of questions\n    var qs = [];\n    Object.keys(o).forEach(function (key) {\n      if (revise || !block.hasOwnProperty(key)) {\n        qs.push(o[key]);\n      }\n    });\n\n    if (qs.length) {\n      // if we need to prompt, feed the list to interactive mode\n      if (!revise) {\n        cli.error('Block.json is missing some information.');\n      }\n\n      inquirer.prompt(qs).then(cb);\n    } else {\n      // otherwise just return\n      cb(block);\n    }\n  };\n\n  // update the pubnub-api lib with the local sessions\n  var restore = function (session, cb) {\n    api.session = session;\n    cb(null, session);\n  };\n\n  var blockCreate = function (key, cb) {\n    updateBlock(self.blockLocal, !options.insert, function (block) {\n      block.key_id = key.id;\n      block.subscribe_key = key.subscribe_key;\n      block.publish_key = key.publish_key;\n\n      api.createBlock({ keyId: key.id, blockPayload: block }, function (err, data) {\n        cli.ok('Block Created');\n        cb(err ? err.message : null, data.payload);\n      });\n    });\n  };\n\n  // OK: Use this handy command next time:\n  // OK: pubnub-cli push -b 1130 -k 145183\n  var explain = function () {\n    var opts = {};\n\n    // checks for the presence of object properties and informs users\n    // that they can use relevant args as a shortcut\n    if (self.blockRemote) {\n      opts.b = self.blockRemote.id;\n    }\n    if (self.key) {\n      opts.k = self.key.id;\n    }\n    if (options.file && options.file !== '/') {\n      opts.f = options.file;\n    }\n\n    if (Object.keys(opts).length) {\n      var hint = 'pubnub-cli ' + cli.command;\n\n      Object.keys(opts).forEach(function (key) {\n        hint = hint + ' -' + key + ' ' + opts[key];\n      });\n\n      cli.ok('Use this handy command next time:');\n      cli.ok(hint);\n    }\n  };\n\n  // restores session from local file\n  self.sessionFileGet = function (cb) {\n    cli.debug('sessionFileGet');\n\n    // see if session file exists\n    cli.info('Reading session from ' + sessionFile);\n    fs.readJson(sessionFile, function (err, session) {\n      if (err) {\n        cb(null);\n      } else {\n        self.session = session;\n        cb(null);\n      }\n    });\n  };\n\n  // deletes the local session file\n  self.sessionDelete = function (cb) {\n    cli.debug('delete_settings');\n\n    if (!self.session) {\n      cli.error('You are not logged in.');\n    } else {\n      cli.info('Deleting session from ' + sessionFile);\n      fs.unlink(sessionFile, function (err) {\n        if (err) {\n          cb(err);\n        } else {\n          cb();\n        }\n      });\n    }\n  };\n\n  // uses the local session file to login\n  self.sessionGet = function (cb) {\n    cli.debug('get_user');\n\n    var login = function (args2) {\n      cli.spinner('Logging In...');\n\n      api.init(args2, function (err, body) {\n        cli.spinner('Logging In... Done!', true);\n\n        if (err) {\n          cb(err);\n        } else {\n          cli.info('Writing session to ' + sessionFile);\n          fs.outputJson(sessionFile, body.result, { spaces: 4 }, function (err2) {\n            self.session = body.result;\n            cb(err2);\n          });\n        }\n      });\n    };\n\n    if (!self.session) {\n      if (cli.command !== 'login') {\n        cli.error('No session found, please log in.');\n      }\n\n      if (options.email || options.password) {\n        if (options.email && options.password) {\n          login({\n            email: options.email,\n            password: options.password\n          }, cb);\n        } else {\n          cli.error('You must supply both email' +\n            ' and password to login.');\n        }\n      } else {\n        // no file found, prompt for user and pass\n        inquirer.prompt([userQuestions.email, userQuestions.password]).then(function (answers) {\n          login(answers, cb);\n        });\n      }\n    } else {\n      // we have the session file\n      if (self.session.expires > (new Date().getTime() / 1000)) {\n        cli.ok('Working as ' + self.session.user.email);\n\n        // token is not expired, tell api to restore\n        restore(self.session, cb);\n      } else {\n        // token expired, need to login again\n        cli.error('Session has expired, please login.');\n\n        // supply email, prompt password\n        inquirer.prompt([userQuestions.password]).then(function (answers) {\n          answers.email = self.session.user.email;\n          login(answers, cb);\n        });\n      }\n    }\n  };\n\n  // this is a shortcut to require a block.json is supplied\n  self.requireInit = function (cb) {\n    self.blockFileRequired = true;\n    cb();\n  };\n\n  // reads a block.json from wokring dir and sets as self.blockLocal\n  self.blockRead = function (cb) {\n    cli.debug('blockRead');\n\n    cli.info('Reading block.json from ' + blockFile);\n    fs.readJson(blockFile, function (err, data) {\n      if (err) {\n        if (self.blockFileRequired) {\n          cli.info('No block.json found.' +\n            ' Please run pubnub-cli init.');\n        } else {\n          cb(null);\n        }\n      } else {\n        if (data.name) {\n          cli.ok('Working on block ' + data.name);\n        }\n        self.blockLocal = data;\n        cb();\n      }\n    });\n  };\n\n  // creates a block.json in working dir\n  self.blockFileCreate = function (cb) {\n    cli.debug('blockFileCreate');\n\n    cli.info('Checking for block.json in ' + blockFile);\n    fs.readJson(blockFile, function (err, data) {\n      if (data) {\n        cli.info('Block.json already exists.... editing');\n        cb();\n      } else {\n        cli.info('Writing block.json to ' + blockFile);\n        fs.outputJson(blockFile, {}, {\n          spaces: 4\n        }, cb);\n      }\n    });\n  };\n\n  // sets self.key\n  self.keyGet = function (cb) {\n    cli.debug('keyGet');\n\n    // looks first in options, then in remote block, then local block\n    var givenKey = options.key || self.blockRemote.key_id || self.blockLocal._key_id;\n\n    api.getApps({ ownerId: self.session.user.id }, function (err, data) {\n      // if key is supplied through cli or file\n      if (givenKey) {\n        // we need to map the key id to the key object\n        var paramKey = false;\n\n        data.result.forEach(function (app) {\n          app.keys.forEach(function (value) {\n            if (givenKey === value.id) {\n              paramKey = value;\n            }\n          });\n        });\n\n        if (!paramKey) {\n          cb('Invalid key ID');\n        } else {\n          self.key = paramKey;\n          cb(err);\n        }\n      } else {\n        // create an interactive key selection\n        var choices = [];\n\n        // loop through apps\n        data.result.forEach(function (value) {\n          choices.push(new inquirer.Separator('---' + value.name));\n\n          // loop through keys in app\n          value.keys.forEach(function (value2) {\n            choices.push({\n              name: value2.properties.name || value2.subscribe_key,\n              value: value2\n            });\n          });\n        });\n\n        cli.ok('Which app are you working on?');\n\n        inquirer.prompt([{\n          type: 'list',\n          name: 'key',\n          message: 'Select a key',\n          choices: choices\n        }]).then(function (answers) {\n          self.key = answers.key;\n          cb(err);\n        });\n      }\n    });\n  };\n\n  // gets a remote block and sets as self.blockRemote\n  self.blockGet = function (cb) {\n    cli.debug('block');\n\n    // look for the key in options\n    // then remote block, then local block\n    var givenBlock = options.block || self.blockRemote.id || self.blockLocal._id;\n\n    var createcb = function () {\n      blockCreate(self.key, function (err2, data) {\n        self.blockRemote = data;\n        cb(err2);\n      });\n    };\n\n    api.getBlocks({ keyId: self.key.id }, function (err, result) {\n      if (err) {\n        cb(err);\n      } else {\n        // if we force upsert, forget prompts\n        if (options.insert) {\n          createcb();\n        } else if (givenBlock) {\n          // if block is supplied through cli\n          var paramBlock = false;\n\n          result.payload.forEach(function (value) {\n            if (givenBlock === value.id) {\n              paramBlock = value;\n            }\n          });\n\n          if (!paramBlock) {\n            cb('Invalid block ID');\n          } else {\n            self.blockRemote = paramBlock;\n            cb(null);\n          }\n        } else {\n          // choose block with gui\n          var choices = [];\n          choices.push(new inquirer.Separator('--- Admin'));\n\n          choices.push({\n            name: 'Create a New Block',\n            value: false\n          });\n\n          if (result.payload.length) {\n            choices.push(new inquirer.Separator('--- Blocks'));\n\n            result.payload.forEach(function (value) {\n              choices.push({\n                name: value.name,\n                value: value\n              });\n            });\n          }\n\n          cli.ok('Which block are you working on?');\n\n          inquirer.prompt([{\n            type: 'list',\n            name: 'block',\n            message: 'Select a block',\n            choices: choices\n          }]).then(function (answers) {\n            if (!answers.block) {\n              createcb();\n            } else {\n              self.blockRemote = answers.block;\n              cb(null);\n            }\n          });\n        }\n      }\n    });\n  };\n\n  // writes block to the local file\n  self.blockWrite = function (cb) {\n    cli.debug('blockWrite');\n\n    // if for some reason blockLocal has key_id, remove it\n    if (self.blockLocal.key_id) {\n      delete self.blockLocal.key_id;\n    }\n\n    self.blockLocal._key_id = self.key.id;\n    self.blockLocal._id = self.blockRemote.id;\n    self.blockLocal.name = self.blockRemote.name;\n    self.blockLocal.description = self.blockRemote.description;\n\n    cli.info('Writing block.json to ' + blockFile);\n    fs.outputJson(blockFile, self.blockLocal, { spaces: 4 }, cb);\n  };\n\n  // pushes self.blockLocal to endpoint\n  self.blockPush = function (cb) {\n    cli.debug('blockPush');\n\n    var blockPushArgs = {\n      keyId: self.blockRemote.key_id,\n      blockId: self.blockRemote.id,\n      blockPayload: self.blockLocal\n    };\n\n    api.updateBlock(blockPushArgs, function (err) {\n      cb(err ? err.message : null);\n    });\n  };\n\n  // starts block on pubnub server\n  self.blockStart = function (cb) {\n    cli.debug('blockStart');\n\n    api.startBlock({ keyId: self.blockLocal._key_id, blockId: self.blockLocal._id }, function () {\n      cli.ok('Sending Start Command');\n\n      // after it starts\n      // we need to subscribe to the channel to see output\n      var pubnub = PUBNUB.init({\n        subscribe_key: self.key.subscribe_key,\n        publish_key: self.key.publish_key,\n        origin: self.env.origin\n      });\n\n      // the channel is crazy\n      var chan = 'blocks-state-' +\n        self.key.properties.realtime_analytics_channel +\n        '.' + self.blockLocal._id;\n\n      cli.info('Subscribing to blocks status channel...');\n\n      // show a loading spinner\n      cli.spinner('Starting Block...');\n\n      // subscribe to status channel\n      pubnub.subscribe({\n        channel: chan,\n        message: function (m) {\n          if (m.state === 'running') {\n            cli.spinner('Starting Block... OK', true);\n            cli.ok('Block State: ' + m.state);\n            cb();\n          } else if (m.state === 'stopped') {\n            cli.ok('Block State: ' + m.state);\n            cb();\n          } else {\n            if (m.state !== 'pending') {\n              cli.info('Block State: ' + m.state + '...');\n            }\n          }\n        },\n        error: function (error) {\n          // Handle error here\n          cb(JSON.stringify(error));\n        }\n      });\n    });\n  };\n\n  // issue block stop request on server\n  self.blockStop = function (cb) {\n    cli.debug('blockStop');\n\n    api.stopBlock({ keyId: self.blockLocal._key_id, blockId: self.blockLocal._id }, function (err) {\n      cb(err);\n    });\n  };\n\n  // get event handler from server and set as self.eventHandler\n  self.eventHandlerGet = function (cb) {\n    cli.debug('eventHandler');\n\n    // if event is supplied through cli\n    if (options.eventHandler) {\n      var paramEventHandler = false;\n\n      self.blockRemote.event_handlers.forEach(function (value) {\n        if (options.eventHandler === value.id) {\n          paramEventHandler = value;\n        }\n      });\n\n      if (!paramEventHandler) {\n        cb('Invalid event handler ID');\n      } else {\n        self.eventHandler = paramEventHandler;\n        cb(null);\n      }\n    } else {\n      var choices = [];\n\n      self.blockRemote.event_handlers.forEach(function (value) {\n        choices.push({ name: value.name, value: value });\n      });\n\n      cli.ok('Which event handler?');\n\n      inquirer.prompt([{\n        type: 'list',\n        name: 'eventHandler',\n        message: 'Select an event handler',\n        choices: choices\n      }]).then(function (answers) {\n        self.eventHandler = answers.eventHandler;\n        cb(null);\n      });\n    }\n  };\n\n  // write the event handler to a js file within a directory\n  self.eventHandlerWrite = function (cb) {\n    cli.debug('eventHandlerWrite');\n\n    self.blockLocal.event_handlers = self.blockLocal.event_handlers || [];\n\n    // for each server event handler\n    async.eachSeries(self.blockRemote.event_handlers, function (eh, holla) {\n      cli.info('Working on ' + eh.name);\n\n      eh.file = eh.event + '/' + slug(eh.name) + '.js';\n      var fullPath = workingDir + options.file + eh.file;\n\n      // try to find event handler with same id\n      var noIds = []; // count the number of eh with no id\n\n      var found = false;\n\n      self.blockLocal.event_handlers.forEach(function (value) {\n        // if ids match\n        // overwrite local with what we have on server\n        if (eh.id === value._id) {\n          found = true;\n          value = mergeEventHandler(value, eh);\n        }\n\n        // find event handlers on server that do not exist locally\n        if (!value._id) {\n          noIds.push(value);\n        }\n      });\n\n      // writes an event handler to disk\n      var appendEH = function () {\n        cli.info('Writing event handler to ' + fullPath);\n        fs.outputFile(fullPath, eh.code, function () {\n          cli.debug('writing eventHandler');\n          self.blockLocal.event_handlers.push(mergeEventHandler({}, eh));\n          holla();\n        });\n      };\n\n      // if server event handler exists and no match found\n      if (!found) {\n        // if all the existing eh in the file have ids\n        if (!noIds.length) {\n          // write the file and push\n          appendEH();\n        } else {\n          cli.error('There is a remote event handler that does not have a local link.');\n          cli.error('Does this (server) event handler match a (local) event handler?');\n\n          cli.info('Event Handler Name: ' + eh.name);\n          cli.info('Event Handler Description: ' + eh.description);\n\n          var choices = [];\n\n          choices.push(new inquirer.Separator('--- Select'));\n\n          var i = 0;\n          self.blockLocal.event_handlers.forEach(function (value) {\n            choices.push({ name: value.name, value: { index: i, value: value } });\n            i += 1;\n          });\n\n          choices.push(new inquirer.Separator('--- Create'));\n\n          choices.push({ name: 'Create a new event handler', value: false });\n\n          cli.info('prompt');\n\n          inquirer.prompt([{\n            type: 'list',\n            name: 'eh',\n            message: 'Which event handler is this?',\n            choices: choices\n          }]).then(function (answers) {\n            if (!answers.eh) {\n              appendEH();\n            } else {\n              mergeEventHandler(\n                self.blockLocal.event_handlers[\n                  answers.eh.index], eh);\n              holla(null);\n            }\n          });\n        }\n      }\n    },\n      function () {\n        cli.debug('Writing event handlers to block.json to ' + blockFile);\n        fs.outputJson(blockFile, self.blockLocal, { spaces: 4 }, cb);\n      }\n    );\n  };\n\n  // ensures that all properties exist within block.json\n  self.blockComplete = function (cb) {\n    cli.debug('ensuring block in block.json is complete');\n\n    updateBlock(self.blockLocal, false, function (data) {\n      self.blockLocal = mergeBlock(self.blockLocal, data);\n\n      cli.debug('Writing block.json to ' + blockFile);\n      fs.outputJson(blockFile, self.blockLocal, { spaces: 4 }, cb);\n    });\n  };\n\n  // ensures that all needed properties exist within eventHandler\n  self.eventHandlerComplete = function (cb) {\n    cli.debug('ensuring event handler in block.json is complete');\n\n    async.mapSeries(self.blockLocal.event_handlers, function (eh, holla) {\n      updateEventHandler(eh, false, function (data) {\n        holla(null, mergeEventHandler(eh, data));\n      });\n    }, function (err, results) {\n      self.blockLocal.event_handlers = results;\n\n      cli.debug('Writing block.json in' + blockFile);\n      fs.outputJson(blockFile, self.blockLocal, { spaces: 4 }, cb);\n    });\n  };\n\n  // uploads the event handler to the server\n  self.eventHandlerPush = function (cb) {\n    cli.debug('eventHandlerPush');\n\n    var update = function (data, done) {\n      var id = data._id;\n\n      // these properties don't exist on server, so don't send them\n      delete data._id;\n      if (data.file) {\n        delete data.file;\n      }\n\n      if (id) {\n        // if id exists, update (put)\n        api.updateBlock({ keyId: self.blockRemote.key_id, eventHandlerId: id, eventHandlerPayload: data }, done);\n      } else {\n        // of id does not exist (update)\n        data.block_id = self.blockRemote.id;\n        data.key_id = self.blockRemote.key_id;\n        data.type = 'js';\n\n        api.createBlock({ keyId: self.blockRemote.key_id, eventHandlerPayload: data }, done);\n      }\n    };\n\n    // update all event handlers supplies in block.json\n    async.each(self.blockLocal.event_handlers, function (eh, holla) {\n      if (eh.file) {\n        var fullPath = workingDir + options.file + eh.file;\n        var testJson = workingDir + options.file + 'test.json';\n\n        cli.info('Uploading event handler from ' + fullPath);\n        fs.readFile(fullPath, 'utf8', function (err, data) {\n          if (err) {\n            holla(err.message);\n          } else {\n            // internal use only\n            // see if there's a test.json in directory\n            if (fs.existsSync(testJson)) {\n              // replace placeholder vars with those\n              // in test.json if so\n              var testVars = JSON.parse(fs.readFileSync(testJson, 'utf8'));\n\n              // do the actual replacing\n              Object.keys(testVars).forEach(function (key) {\n                data = data.replace(key, testVars[key]);\n              });\n            }\n\n            eh.code = data;\n\n            update(eh, holla);\n          }\n        });\n      } else {\n        update(eh, holla);\n      }\n    }, cb);\n  };\n\n  // this is an array of routes\n  // each route matches a possible command supplies through the cli\n  // ```functions``` is an array of methods that are executed in order\n  // ```success``` is the message displayed\n  // when all methods have been executed\n  var routes = {\n    login: {\n      functions: ['sessionFileGet', 'sessionGet'],\n      success: 'Logged In!'\n    },\n    logout: {\n      functions: ['sessionFileGet', 'sessionDelete'],\n      success: 'Logged Out'\n    },\n    init: {\n      functions: ['sessionFileGet', 'sessionGet',\n        'blockFileCreate', 'blockRead', 'keyGet', 'blockGet',\n        'blockWrite', 'eventHandlerWrite'\n      ],\n      success: 'New block.json written to disk.'\n    },\n    push: {\n      functions: ['sessionFileGet', 'sessionGet', 'blockRead',\n        'keyGet', 'blockGet', 'blockComplete',\n        'eventHandlerComplete', 'eventHandlerPush',\n        'blockPush'\n      ],\n      success: 'Block pushed'\n    },\n    pull: {\n      functions: ['sessionFileGet', 'sessionGet', 'requireInit',\n        'blockRead', 'keyGet', 'blockGet', 'blockWrite',\n        'eventHandlerWrite'\n      ],\n      success: 'Local block.json updated with remote data.'\n    },\n    start: {\n      functions: ['sessionFileGet', 'sessionGet', 'blockRead',\n        'keyGet', 'blockStart'\n      ],\n      success: 'Block started'\n    },\n    stop: {\n      functions: ['sessionFileGet', 'sessionGet', 'blockRead',\n        'blockStop'\n      ],\n      success: 'Block stopped'\n    }\n  };\n\n  // this is the magic function that creates a function queue\n  // using the supplied CLI command\n  routes[cli.command].functions.forEach(function (value) {\n    tasks.push(self[value]);\n  });\n\n  // async series is used to execute the commands in series\n  // if one function fails, the process immediately returns\n  // and displays an error\n  async.series(tasks, function (err) {\n    if (err) {\n      // display our error if one is thrown\n      if (err.code) {\n        cli.error(err.code + ' - ' + (err.error || 'There was a problem with that request'));\n      } else {\n        cli.error(err);\n      }\n    } else {\n      // otherwise, display the given success message\n      cli.ok('---------------------------------------');\n      if (routes[cli.command].success) {\n        cli.ok(routes[cli.command].success);\n      }\n      cli.ok('Deluxe!');\n      cli.ok('---------------------------------------');\n\n      // display the 'use this command next time' message\n      explain();\n\n      // forceful exit\n      process.exit(0);\n    }\n  });\n\n  return self;\n});\n"],"sourceRoot":"/source/"}