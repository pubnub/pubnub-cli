{"version":3,"sources":["index.js"],"names":["isCLI","logger","Logger","transports","Console","networking","endpoint","initComponent","interactive","sessionComponent","associateComponent","associate","perform","bind","init","block","createBlock","handler","createEventHandler","session","check","checkSession","create","createSession","delete","deleteSession","validate","folderPath","sourceCodeFolder","join","sourceFolderContents","readdirSync","e","error","forEach","sourceFile","sourceCodeLocation","extname","sourceCodeContents","readFileSync","parse","sourceType","info"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAGA;;;;AACA;;;;AACA;;;;;;;;aAIE,kBAA2B;AAAA;;AAAA,MAAfA,KAAe,uEAAP,KAAO;;AAAA;;AACzB,OAAKC,MAAL,GAAc,IAAK,kBAAQC,MAAb,CAAqB;AACjCC,gBAAY,CACV,IAAK,kBAAQA,UAAR,CAAmBC,OAAxB,EADU;AADqB,GAArB,CAAd;;AAMA,OAAKC,UAAL,GAAkB,yBAAe,EAAEC,UAAU,0BAAZ,EAAwCL,QAAQ,KAAKA,MAArD,EAAf,CAAlB;;AAEA,OAAKM,aAAL,GAAqB,mBAAkB,EAAEF,YAAY,KAAKA,UAAnB,EAA+BJ,QAAQ,KAAKA,MAA5C,EAAoDO,aAAaR,KAAjE,EAAlB,CAArB;AACA,OAAKS,gBAAL,GAAwB,sBAAqB,EAAEJ,YAAY,KAAKA,UAAnB,EAA+BJ,QAAQ,KAAKA,MAA5C,EAAoDO,aAAaR,KAAjE,EAArB,CAAxB;AACA,OAAKU,kBAAL,GAA0B,wBAAuB,EAAEL,YAAY,KAAKA,UAAnB,EAA+BI,kBAAkB,KAAKA,gBAAtD,EAAwER,QAAQ,KAAKA,MAArF,EAA6FO,aAAaR,KAA1G,EAAvB,CAA1B;;AAEA,OAAKW,SAAL,GAAiB,KAAKD,kBAAL,CAAwBE,OAAxB,CAAgCC,IAAhC,CAAqC,KAAKH,kBAA1C,CAAjB;;AAEA,OAAKI,IAAL,GAAY;AACVC,WAAO,KAAKR,aAAL,CAAmBS,WAAnB,CAA+BH,IAA/B,CAAoC,KAAKN,aAAzC,CADG;AAEVU,aAAS,KAAKV,aAAL,CAAmBW,kBAAnB,CAAsCL,IAAtC,CAA2C,KAAKN,aAAhD;AAFC,GAAZ;;AAKA,OAAKY,OAAL,GAAe;AACbC,WAAO,KAAKX,gBAAL,CAAsBY,YAAtB,CAAmCR,IAAnC,CAAwC,KAAKJ,gBAA7C,CADM;AAEba,YAAQ,KAAKb,gBAAL,CAAsBc,aAAtB,CAAoCV,IAApC,CAAyC,KAAKJ,gBAA9C,CAFK;AAGbe,YAAQ,KAAKf,gBAAL,CAAsBgB,aAAtB,CAAoCZ,IAApC,CAAyC,KAAKJ,gBAA9C;AAHK,GAAf;;AAMA,OAAKiB,QAAL,GAAgB,gBAAoB;AAAA,QAAjBC,UAAiB,QAAjBA,UAAiB;;AAClC,QAAMC,mBAAmB,eAAKC,IAAL,CAAUF,UAAV,EAAsB,KAAtB,CAAzB;AACA,QAAIG,uBAAuB,EAA3B;;AAEA,QAAI;AACFA,6BAAuB,aAAGC,WAAH,CAAeH,gBAAf,CAAvB;AACD,KAFD,CAEE,OAAOI,CAAP,EAAU;AACV,YAAK/B,MAAL,CAAYgC,KAAZ,CAAkB,8BAAlB,EAAkDD,CAAlD;AACA;AACD;;AAEDF,yBAAqBI,OAArB,CAA6B,UAACC,UAAD,EAAgB;AAE3C,UAAMC,qBAAqB,eAAKP,IAAL,CAAUD,gBAAV,EAA4BO,UAA5B,CAA3B;AACA,UAAI,eAAKE,OAAL,CAAaD,kBAAb,MAAqC,KAAzC,EAAgD;AAC9C,YAAME,qBAAqB,aAAGC,YAAH,CAAgBH,kBAAhB,EAAoC,OAApC,CAA3B;;AAEA,YAAI;AACF,4BAAQI,KAAR,CAAcF,kBAAd,EAAkC,EAAEG,YAAY,QAAd,EAAlC;AACA,gBAAKxC,MAAL,CAAYyC,IAAZ,CAAiBP,aAAa,WAA9B;AACD,SAHD,CAGE,OAAOH,CAAP,EAAU;AACV,gBAAK/B,MAAL,CAAYgC,KAAZ,CAAkBE,aAAa,aAA/B,EAA8CH,CAA9C;AACD;AACF;AACF,KAbD;AAcD,GAzBD;AA2BD,C","file":"index.js","sourcesContent":["\nimport winston from 'winston';\nimport fs from 'fs';\nimport path from 'path';\nimport esprima from 'esprima';\n\nimport Networking from './networking';\n\n\nimport SessionComponent from './components/session';\nimport InitComponent from './components/init';\nimport AssociateComponent from './components/associate';\n\nexport default class {\n\n  constructor(isCLI = false) {\n    this.logger = new (winston.Logger)({\n      transports: [\n        new (winston.transports.Console)()\n      ]\n    });\n\n    this.networking = new Networking({ endpoint: 'https://admin.pubnub.com', logger: this.logger });\n\n    this.initComponent = new InitComponent({ networking: this.networking, logger: this.logger, interactive: isCLI });\n    this.sessionComponent = new SessionComponent({ networking: this.networking, logger: this.logger, interactive: isCLI });\n    this.associateComponent = new AssociateComponent({ networking: this.networking, sessionComponent: this.sessionComponent, logger: this.logger, interactive: isCLI });\n\n    this.associate = this.associateComponent.perform.bind(this.associateComponent);\n\n    this.init = {\n      block: this.initComponent.createBlock.bind(this.initComponent),\n      handler: this.initComponent.createEventHandler.bind(this.initComponent)\n    };\n\n    this.session = {\n      check: this.sessionComponent.checkSession.bind(this.sessionComponent),\n      create: this.sessionComponent.createSession.bind(this.sessionComponent),\n      delete: this.sessionComponent.deleteSession.bind(this.sessionComponent)\n    };\n\n    this.validate = ({ folderPath }) => {\n      const sourceCodeFolder = path.join(folderPath, 'src');\n      let sourceFolderContents = [];\n\n      try {\n        sourceFolderContents = fs.readdirSync(sourceCodeFolder);\n      } catch (e) {\n        this.logger.error('failed to read source folder', e);\n        return;\n      }\n\n      sourceFolderContents.forEach((sourceFile) => {\n        // skip if it's not a javascript file.\n        const sourceCodeLocation = path.join(sourceCodeFolder, sourceFile);\n        if (path.extname(sourceCodeLocation) === '.js') {\n          const sourceCodeContents = fs.readFileSync(sourceCodeLocation, 'UTF-8');\n\n          try {\n            esprima.parse(sourceCodeContents, { sourceType: 'module' });\n            this.logger.info(sourceFile + ' is valid');\n          } catch (e) {\n            this.logger.error(sourceFile + ' is invalid', e);\n          }\n        }\n      });\n    };\n\n  }\n}\n"]}