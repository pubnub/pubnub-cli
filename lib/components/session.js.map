{"version":3,"sources":["components/session.js"],"names":["logger","networking","interactive","sessionStorage","homedir","username","password","Promise","resolve","_deleteSessonFile","then","info","readFile","err","data","error","sessionToken","writeFile","unlink"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;AAIE,wBAAyD;AAAA,QAA3CA,MAA2C,QAA3CA,MAA2C;AAAA,QAAnCC,UAAmC,QAAnCA,UAAmC;AAAA,gCAAvBC,WAAuB;AAAA,QAAvBA,WAAuB,oCAAT,KAAS;;AAAA;;AACvD,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKE,cAAL,GAAsB,aAAGC,OAAH,KAAe,cAArC;AACA,SAAKF,WAAL,GAAmBA,WAAnB;AACD;;;;yCAEqC;AAAA,UAAtBG,QAAsB,SAAtBA,QAAsB;AAAA,UAAZC,QAAY,SAAZA,QAAY;;AACpC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BA,gBAAQ,EAAEH,kBAAF,EAAYC,kBAAZ,EAAR;AACD,OAFM,CAAP;AAGD;;;oCAEe;AAAA;;AACd,aAAO,KAAKG,iBAAL,GAAyBC,IAAzB,CAA8B,YAAM;AACzC,YAAI,MAAKR,WAAT,EAAsB,MAAKF,MAAL,CAAYW,IAAZ,CAAiB,wBAAjB;AACvB,OAFM,CAAP;AAGD;;;wCAEmB;AAAA;;AAClB,aAAO,IAAIJ,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,qBAAGI,QAAH,CAAY,OAAKT,cAAjB,EAAiC,MAAjC,EAAyC,UAACU,GAAD,EAAMC,IAAN,EAAe;AACtD,cAAID,GAAJ,EAAS,OAAKb,MAAL,CAAYe,KAAZ,CAAkBF,GAAlB;AACTL,kBAAQM,IAAR;AACD,SAHD;AAID,OALM,CAAP;AAMD;;;uCAEkBE,Y,EAAc;AAAA;;AAC/B,aAAO,KAAKP,iBAAL,GAAyBC,IAAzB,CAA8B,YAAM;AACzC,eAAO,IAAIH,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,uBAAGS,SAAH,CAAa,OAAKd,cAAlB,EAAkCa,YAAlC,EAAgD,UAACH,GAAD,EAAS;AACvD,gBAAIA,GAAJ,EAAS,OAAKb,MAAL,CAAYe,KAAZ,CAAkBF,GAAlB;AACTL;AACD,WAHD;AAID,SALM,CAAP;AAMD,OAPM,CAAP;AAQD;;;wCAEmB;AAAA;;AAClB,aAAO,IAAID,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,qBAAGU,MAAH,CAAU,OAAKf,cAAf,EAA+B,UAACU,GAAD,EAAS;AACtC,cAAIA,GAAJ,EAAS,OAAKb,MAAL,CAAYe,KAAZ,CAAkBF,GAAlB;AACTL;AACD,SAHD;AAID,OALM,CAAP;AAMD","file":"session.js","sourcesContent":["import os from 'os';\nimport fs from 'fs';\n\nexport default class {\n\n  constructor({ logger, networking, interactive = false }) {\n    this.logger = logger;\n    this.networking = networking;\n    this.sessionStorage = os.homedir() + '/.pubnub-cli';\n    this.interactive = interactive;\n  }\n\n  createSession({ username, password }) {\n    return new Promise((resolve) => {\n      resolve({ username, password });\n    });\n  }\n\n  deleteSession() {\n    return this._deleteSessonFile().then(() => {\n      if (this.interactive) this.logger.info('PubNub Session Deleted');\n    });\n  }\n\n  _fetchSessionFile() {\n    return new Promise((resolve) => {\n      fs.readFile(this.sessionStorage, 'utf8', (err, data) => {\n        if (err) this.logger.error(err);\n        resolve(data);\n      });\n    });\n  }\n\n  _createSessionFile(sessionToken) {\n    return this._deleteSessonFile().then(() => {\n      return new Promise((resolve) => {\n        fs.writeFile(this.sessionStorage, sessionToken, (err) => {\n          if (err) this.logger.error(err);\n          resolve();\n        });\n      });\n    });\n  }\n\n  _deleteSessonFile() {\n    return new Promise((resolve) => {\n      fs.unlink(this.sessionStorage, (err) => {\n        if (err) this.logger.error(err);\n        resolve();\n      });\n    });\n  }\n\n}\n"]}