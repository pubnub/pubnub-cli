{"version":3,"sources":["components/session.js"],"names":["logger","networking","sessionStorage","homedir","_deleteSessonFile","then","info","Promise","resolve","readFile","err","data","error","sessionToken","writeFile","unlink"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;AAIE,wBAAoC;AAAA,QAAtBA,MAAsB,QAAtBA,MAAsB;AAAA,QAAdC,UAAc,QAAdA,UAAc;;AAAA;;AAClC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,cAAL,GAAsB,aAAGC,OAAH,KAAe,cAArC;AACD;;;;oCAEe;AAAA;;AACd,aAAO,KAAKC,iBAAL,GAAyBC,IAAzB,CAA8B,YAAM;AACzC,cAAKL,MAAL,CAAYM,IAAZ,CAAiB,wBAAjB;AACD,OAFM,CAAP;AAGD;;;wCAEmB;AAAA;;AAClB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,qBAAGC,QAAH,CAAY,OAAKP,cAAjB,EAAiC,MAAjC,EAAyC,UAACQ,GAAD,EAAMC,IAAN,EAAe;AACtD,cAAID,GAAJ,EAAS,OAAKV,MAAL,CAAYY,KAAZ,CAAkBF,GAAlB;AACTF,kBAAQG,IAAR;AACD,SAHD;AAID,OALM,CAAP;AAMD;;;uCAEkBE,Y,EAAc;AAAA;;AAC/B,aAAO,KAAKT,iBAAL,GAAyBC,IAAzB,CAA8B,YAAM;AACzC,eAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,uBAAGM,SAAH,CAAa,OAAKZ,cAAlB,EAAkCW,YAAlC,EAAgD,UAACH,GAAD,EAAS;AACvD,gBAAIA,GAAJ,EAAS,OAAKV,MAAL,CAAYY,KAAZ,CAAkBF,GAAlB;AACTF;AACD,WAHD;AAID,SALM,CAAP;AAMD,OAPM,CAAP;AAQD;;;wCAEmB;AAAA;;AAClB,aAAO,IAAID,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,qBAAGO,MAAH,CAAU,OAAKb,cAAf,EAA+B,UAACQ,GAAD,EAAS;AACtC,cAAIA,GAAJ,EAAS,OAAKV,MAAL,CAAYY,KAAZ,CAAkBF,GAAlB;AACTF;AACD,SAHD;AAID,OALM,CAAP;AAMD","file":"session.js","sourcesContent":["import os from 'os';\nimport fs from 'fs';\n\nexport default class {\n\n  constructor({ logger, networking }) {\n    this.logger = logger;\n    this.networking = networking;\n    this.sessionStorage = os.homedir() + '/.pubnub-cli';\n  }\n\n  deleteSession() {\n    return this._deleteSessonFile().then(() => {\n      this.logger.info('PubNub Session Deleted');\n    });\n  }\n\n  _fetchSessionFile() {\n    return new Promise((resolve) => {\n      fs.readFile(this.sessionStorage, 'utf8', (err, data) => {\n        if (err) this.logger.error(err);\n        resolve(data);\n      });\n    });\n  }\n\n  _createSessionFile(sessionToken) {\n    return this._deleteSessonFile().then(() => {\n      return new Promise((resolve) => {\n        fs.writeFile(this.sessionStorage, sessionToken, (err) => {\n          if (err) this.logger.error(err);\n          resolve();\n        });\n      });\n    });\n  }\n\n  _deleteSessonFile() {\n    return new Promise((resolve) => {\n      fs.unlink(this.sessionStorage, (err) => {\n        if (err) this.logger.error(err);\n        resolve();\n      });\n    });\n  }\n\n}\n"]}